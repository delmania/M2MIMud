head	1.3;
access;
symbols;
locks
	rjw2183:1.3; strict;
comment	@# @;


1.3
date	2005.01.06.14.01.48;	author rjw2183;	state Exp;
branches;
next	1.2;

1.2
date	2004.07.01.19.49.47;	author rjw2183;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.10.17.00.41;	author rjw2183;	state Exp;
branches;
next	;


desc
@@


1.3
log
@*** empty log message ***
@
text
@/** 
 * This interface is for objects which wait and listen for changes in the 
 * status of games.  It as functions which are used to inform when games have
 * been added or removed from the overall network.
 * 
 * @@author: Robert Whitcomb
 * @@file: $Id: GameDiscoveryListener.java,v 1.2 2004/07/01 19:49:47 rjw2183 Exp $
 *
 */
 package m2mimud.communications;

 import java.util.Vector;
 import m2mimud.state.GameState;


 public interface GameDiscoveryListener
 {
 	/**
	 * Notifies the listener that a new game session has been added to the 
	 * world.
	 */
	public void newSessionAdded( SessionAd theSession );
	 
	/**
	 * Notifies the listener a session has been removed.
	 */
	public void sessionLeft( Game sessionName );
	 
	/**
	 * Notifies the listener a session's name has changed.
	 */
	public void sessionNameChanged( Game handle, String newname );
	  
	/**
	 * Notifies the listener that the number in a session has updated
	 */
	public void sessionCountChanged( Game handle, int newCount );
	 
	/**
	 * Notifes that the session's state has changed.
	 */
	public void sessionStateChanged( Game handle, GameState newState );  	 
 }
@


1.2
log
@*** empty log message ***
@
text
@d7 1
a7 1
 * @@file: $Id: GameDiscoveryListener.java,v 1.1 2004/06/10 17:00:41 rjw2183 Exp rjw2183 $
d18 1
a18 2
 
 	/*
d22 1
a22 1
	 public void newSessionAdded( SessionAd theSession );
d24 4
a27 4
	 /*
	  * Notifies the listener a session has been removed.
	  */
	 public void sessionLeft( Game sessionName );
d29 4
a32 4
	 /*
	  * Notifies the listener a session's name has changed.
	  */
	 public void sessionNameChanged( Game handle, String newname );
d34 4
a37 9
	 /*
	  * Notifies the listener that the number in a session has updated
	  */
	 public void sessionCountChanged( Game handle, int newCount );
	 
	  /*
	   * Notifes that the session's state has changed.
	   */
	 public void sessionStateChanged( Game handle, GameState newState );  
d39 4
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
 * @@file: $Id: GameDiscoveryListener.java,v 1.5 2004/04/14 13:54:51 rjw2183 Exp rjw2183 $
a39 5
	 /*
	  * Notifies the listeners that the session's players have changed
	  */
	 public void sessionPlayersChanged( Game handle, Vector newCache );
	  
@
